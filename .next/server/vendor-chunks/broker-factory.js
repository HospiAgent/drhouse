/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/broker-factory";
exports.ids = ["vendor-chunks/broker-factory"];
exports.modules = {

/***/ "(ssr)/./node_modules/broker-factory/build/es5/bundle.js":
/*!*********************************************************!*\
  !*** ./node_modules/broker-factory/build/es5/bundle.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("(function (global, factory) {\n     true ? factory(exports, __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/defineProperty.js\"), __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"(ssr)/./node_modules/@babel/runtime/helpers/slicedToArray.js\"), __webpack_require__(/*! fast-unique-numbers */ \"(ssr)/./node_modules/fast-unique-numbers/build/node/module.js\"), __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"(ssr)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js\"), __webpack_require__(/*! @babel/runtime/regenerator */ \"(ssr)/./node_modules/@babel/runtime/regenerator/index.js\")) :\n    0;\n})(this, (function (exports, _defineProperty, _slicedToArray, fastUniqueNumbers, _asyncToGenerator, _regeneratorRuntime) { 'use strict';\n\n    var isMessagePort = function isMessagePort(sender) {\n      return typeof sender.start === 'function';\n    };\n\n    var PORT_MAP = new WeakMap();\n\n    function ownKeys$1(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\n    function _objectSpread$1(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys$1(Object(t), true).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$1(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n    var extendBrokerImplementation = function extendBrokerImplementation(partialBrokerImplementation) {\n      return _objectSpread$1(_objectSpread$1({}, partialBrokerImplementation), {}, {\n        connect: function connect(_ref) {\n          var call = _ref.call;\n          return /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n            var _MessageChannel, port1, port2, portId;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) switch (_context.prev = _context.next) {\n                case 0:\n                  _MessageChannel = new MessageChannel(), port1 = _MessageChannel.port1, port2 = _MessageChannel.port2;\n                  _context.next = 3;\n                  return call('connect', {\n                    port: port1\n                  }, [port1]);\n                case 3:\n                  portId = _context.sent;\n                  PORT_MAP.set(port2, portId);\n                  return _context.abrupt(\"return\", port2);\n                case 6:\n                case \"end\":\n                  return _context.stop();\n              }\n            }, _callee);\n          }));\n        },\n        disconnect: function disconnect(_ref3) {\n          var call = _ref3.call;\n          return /*#__PURE__*/function () {\n            var _ref4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(port) {\n              var portId;\n              return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) switch (_context2.prev = _context2.next) {\n                  case 0:\n                    portId = PORT_MAP.get(port);\n                    if (!(portId === undefined)) {\n                      _context2.next = 3;\n                      break;\n                    }\n                    throw new Error('The given port is not connected.');\n                  case 3:\n                    _context2.next = 5;\n                    return call('disconnect', {\n                      portId: portId\n                    });\n                  case 5:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }, _callee2);\n            }));\n            return function (_x) {\n              return _ref4.apply(this, arguments);\n            };\n          }();\n        },\n        isSupported: function isSupported(_ref5) {\n          var call = _ref5.call;\n          return function () {\n            return call('isSupported');\n          };\n        }\n      });\n    };\n\n    function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\n    function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), true).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n    var ONGOING_REQUESTS = new WeakMap();\n    var createOrGetOngoingRequests = function createOrGetOngoingRequests(sender) {\n      if (ONGOING_REQUESTS.has(sender)) {\n        // @todo TypeScript needs to be convinced that has() works as expected.\n        return ONGOING_REQUESTS.get(sender);\n      }\n      var ongoingRequests = new Map();\n      ONGOING_REQUESTS.set(sender, ongoingRequests);\n      return ongoingRequests;\n    };\n    var createBroker = function createBroker(brokerImplementation) {\n      var fullBrokerImplementation = extendBrokerImplementation(brokerImplementation);\n      return function (sender) {\n        var ongoingRequests = createOrGetOngoingRequests(sender);\n        sender.addEventListener('message', function (_ref) {\n          var message = _ref.data;\n          var id = message.id;\n          if (id !== null && ongoingRequests.has(id)) {\n            var _ongoingRequests$get = ongoingRequests.get(id),\n              reject = _ongoingRequests$get.reject,\n              resolve = _ongoingRequests$get.resolve;\n            ongoingRequests[\"delete\"](id);\n            if (message.error === undefined) {\n              resolve(message.result);\n            } else {\n              reject(new Error(message.error.message));\n            }\n          }\n        });\n        if (isMessagePort(sender)) {\n          sender.start();\n        }\n        var call = function call(method) {\n          var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n          var transferables = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n          return new Promise(function (resolve, reject) {\n            var id = fastUniqueNumbers.generateUniqueNumber(ongoingRequests);\n            ongoingRequests.set(id, {\n              reject: reject,\n              resolve: resolve\n            });\n            if (params === null) {\n              sender.postMessage({\n                id: id,\n                method: method\n              }, transferables);\n            } else {\n              sender.postMessage({\n                id: id,\n                method: method,\n                params: params\n              }, transferables);\n            }\n          });\n        };\n        var notify = function notify(method, params) {\n          var transferables = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n          sender.postMessage({\n            id: null,\n            method: method,\n            params: params\n          }, transferables);\n        };\n        var functions = {};\n        for (var _i = 0, _Object$entries = Object.entries(fullBrokerImplementation); _i < _Object$entries.length; _i++) {\n          var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n            key = _Object$entries$_i[0],\n            handler = _Object$entries$_i[1];\n          functions = _objectSpread(_objectSpread({}, functions), {}, _defineProperty({}, key, handler({\n            call: call,\n            notify: notify\n          })));\n        }\n        return _objectSpread({}, functions);\n      };\n    };\n\n    exports.createBroker = createBroker;\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJva2VyLWZhY3RvcnkvYnVpbGQvZXM1L2J1bmRsZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLElBQUksS0FBNEQsb0JBQW9CLG1CQUFPLENBQUMsNEdBQXVDLEdBQUcsbUJBQU8sQ0FBQywwR0FBc0MsR0FBRyxtQkFBTyxDQUFDLDBGQUFxQixHQUFHLG1CQUFPLENBQUMsZ0hBQXlDLEdBQUcsbUJBQU8sQ0FBQyw0RkFBNEI7QUFDL1MsSUFBSSxDQUM2TztBQUNqUCxDQUFDLDBIQUEwSDs7QUFFM0g7QUFDQTtBQUNBOztBQUVBOztBQUVBLCtCQUErQix3QkFBd0Isb0NBQW9DLHlDQUF5QyxrQ0FBa0MsMERBQTBELDBCQUEwQjtBQUMxUCxrQ0FBa0MsZ0JBQWdCLHNCQUFzQixPQUFPLGtEQUFrRCwwREFBMEQsOEJBQThCLHFKQUFxSixxRUFBcUUsS0FBSztBQUN4YjtBQUNBLCtDQUErQyxrQ0FBa0M7QUFDakY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFdBQVc7QUFDWCxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDs7QUFFQSw2QkFBNkIsd0JBQXdCLG9DQUFvQyx5Q0FBeUMsa0NBQWtDLDBEQUEwRCwwQkFBMEI7QUFDeFAsZ0NBQWdDLGdCQUFnQixzQkFBc0IsT0FBTyxrREFBa0Qsd0RBQXdELDhCQUE4QixtSkFBbUoscUVBQXFFLEtBQUs7QUFDbGI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0EscUZBQXFGLDZCQUE2QjtBQUNsSDtBQUNBO0FBQ0E7QUFDQSxvREFBb0QsZ0JBQWdCLG9CQUFvQjtBQUN4RjtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7O0FBRUE7O0FBRUEsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy8uL25vZGVfbW9kdWxlcy9icm9rZXItZmFjdG9yeS9idWlsZC9lczUvYnVuZGxlLmpzPzAwZjIiXSwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHtcbiAgICB0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgPyBmYWN0b3J5KGV4cG9ydHMsIHJlcXVpcmUoJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZGVmaW5lUHJvcGVydHknKSwgcmVxdWlyZSgnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9zbGljZWRUb0FycmF5JyksIHJlcXVpcmUoJ2Zhc3QtdW5pcXVlLW51bWJlcnMnKSwgcmVxdWlyZSgnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3luY1RvR2VuZXJhdG9yJyksIHJlcXVpcmUoJ0BiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yJykpIDpcbiAgICB0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQgPyBkZWZpbmUoWydleHBvcnRzJywgJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZGVmaW5lUHJvcGVydHknLCAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9zbGljZWRUb0FycmF5JywgJ2Zhc3QtdW5pcXVlLW51bWJlcnMnLCAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3luY1RvR2VuZXJhdG9yJywgJ0BiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yJ10sIGZhY3RvcnkpIDpcbiAgICAoZ2xvYmFsID0gdHlwZW9mIGdsb2JhbFRoaXMgIT09ICd1bmRlZmluZWQnID8gZ2xvYmFsVGhpcyA6IGdsb2JhbCB8fCBzZWxmLCBmYWN0b3J5KGdsb2JhbC5icm9rZXJGYWN0b3J5ID0ge30sIGdsb2JhbC5fZGVmaW5lUHJvcGVydHksIGdsb2JhbC5fc2xpY2VkVG9BcnJheSwgZ2xvYmFsLmZhc3RVbmlxdWVOdW1iZXJzLCBnbG9iYWwuX2FzeW5jVG9HZW5lcmF0b3IsIGdsb2JhbC5fcmVnZW5lcmF0b3JSdW50aW1lKSk7XG59KSh0aGlzLCAoZnVuY3Rpb24gKGV4cG9ydHMsIF9kZWZpbmVQcm9wZXJ0eSwgX3NsaWNlZFRvQXJyYXksIGZhc3RVbmlxdWVOdW1iZXJzLCBfYXN5bmNUb0dlbmVyYXRvciwgX3JlZ2VuZXJhdG9yUnVudGltZSkgeyAndXNlIHN0cmljdCc7XG5cbiAgICB2YXIgaXNNZXNzYWdlUG9ydCA9IGZ1bmN0aW9uIGlzTWVzc2FnZVBvcnQoc2VuZGVyKSB7XG4gICAgICByZXR1cm4gdHlwZW9mIHNlbmRlci5zdGFydCA9PT0gJ2Z1bmN0aW9uJztcbiAgICB9O1xuXG4gICAgdmFyIFBPUlRfTUFQID0gbmV3IFdlYWtNYXAoKTtcblxuICAgIGZ1bmN0aW9uIG93bktleXMkMShlLCByKSB7IHZhciB0ID0gT2JqZWN0LmtleXMoZSk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBvID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTsgciAmJiAobyA9IG8uZmlsdGVyKGZ1bmN0aW9uIChyKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsIHIpLmVudW1lcmFibGU7IH0pKSwgdC5wdXNoLmFwcGx5KHQsIG8pOyB9IHJldHVybiB0OyB9XG4gICAgZnVuY3Rpb24gX29iamVjdFNwcmVhZCQxKGUpIHsgZm9yICh2YXIgciA9IDE7IHIgPCBhcmd1bWVudHMubGVuZ3RoOyByKyspIHsgdmFyIHQgPSBudWxsICE9IGFyZ3VtZW50c1tyXSA/IGFyZ3VtZW50c1tyXSA6IHt9OyByICUgMiA/IG93bktleXMkMShPYmplY3QodCksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKHIpIHsgX2RlZmluZVByb3BlcnR5KGUsIHIsIHRbcl0pOyB9KSA6IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnModCkpIDogb3duS2V5cyQxKE9iamVjdCh0KSkuZm9yRWFjaChmdW5jdGlvbiAocikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgciwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LCByKSk7IH0pOyB9IHJldHVybiBlOyB9XG4gICAgdmFyIGV4dGVuZEJyb2tlckltcGxlbWVudGF0aW9uID0gZnVuY3Rpb24gZXh0ZW5kQnJva2VySW1wbGVtZW50YXRpb24ocGFydGlhbEJyb2tlckltcGxlbWVudGF0aW9uKSB7XG4gICAgICByZXR1cm4gX29iamVjdFNwcmVhZCQxKF9vYmplY3RTcHJlYWQkMSh7fSwgcGFydGlhbEJyb2tlckltcGxlbWVudGF0aW9uKSwge30sIHtcbiAgICAgICAgY29ubmVjdDogZnVuY3Rpb24gY29ubmVjdChfcmVmKSB7XG4gICAgICAgICAgdmFyIGNhbGwgPSBfcmVmLmNhbGw7XG4gICAgICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9fYXN5bmNUb0dlbmVyYXRvcigvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7XG4gICAgICAgICAgICB2YXIgX01lc3NhZ2VDaGFubmVsLCBwb3J0MSwgcG9ydDIsIHBvcnRJZDtcbiAgICAgICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHtcbiAgICAgICAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHtcbiAgICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgICBfTWVzc2FnZUNoYW5uZWwgPSBuZXcgTWVzc2FnZUNoYW5uZWwoKSwgcG9ydDEgPSBfTWVzc2FnZUNoYW5uZWwucG9ydDEsIHBvcnQyID0gX01lc3NhZ2VDaGFubmVsLnBvcnQyO1xuICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gY2FsbCgnY29ubmVjdCcsIHtcbiAgICAgICAgICAgICAgICAgICAgcG9ydDogcG9ydDFcbiAgICAgICAgICAgICAgICAgIH0sIFtwb3J0MV0pO1xuICAgICAgICAgICAgICAgIGNhc2UgMzpcbiAgICAgICAgICAgICAgICAgIHBvcnRJZCA9IF9jb250ZXh0LnNlbnQ7XG4gICAgICAgICAgICAgICAgICBQT1JUX01BUC5zZXQocG9ydDIsIHBvcnRJZCk7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KFwicmV0dXJuXCIsIHBvcnQyKTtcbiAgICAgICAgICAgICAgICBjYXNlIDY6XG4gICAgICAgICAgICAgICAgY2FzZSBcImVuZFwiOlxuICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwgX2NhbGxlZSk7XG4gICAgICAgICAgfSkpO1xuICAgICAgICB9LFxuICAgICAgICBkaXNjb25uZWN0OiBmdW5jdGlvbiBkaXNjb25uZWN0KF9yZWYzKSB7XG4gICAgICAgICAgdmFyIGNhbGwgPSBfcmVmMy5jYWxsO1xuICAgICAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIF9yZWY0ID0gX2FzeW5jVG9HZW5lcmF0b3IoLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMihwb3J0KSB7XG4gICAgICAgICAgICAgIHZhciBwb3J0SWQ7XG4gICAgICAgICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0Mikge1xuICAgICAgICAgICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHtcbiAgICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgICAgcG9ydElkID0gUE9SVF9NQVAuZ2V0KHBvcnQpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIShwb3J0SWQgPT09IHVuZGVmaW5lZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7XG4gICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdUaGUgZ2l2ZW4gcG9ydCBpcyBub3QgY29ubmVjdGVkLicpO1xuICAgICAgICAgICAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDU7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjYWxsKCdkaXNjb25uZWN0Jywge1xuICAgICAgICAgICAgICAgICAgICAgIHBvcnRJZDogcG9ydElkXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgY2FzZSA1OlxuICAgICAgICAgICAgICAgICAgY2FzZSBcImVuZFwiOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0sIF9jYWxsZWUyKTtcbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoX3gpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIF9yZWY0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH0oKTtcbiAgICAgICAgfSxcbiAgICAgICAgaXNTdXBwb3J0ZWQ6IGZ1bmN0aW9uIGlzU3VwcG9ydGVkKF9yZWY1KSB7XG4gICAgICAgICAgdmFyIGNhbGwgPSBfcmVmNS5jYWxsO1xuICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gY2FsbCgnaXNTdXBwb3J0ZWQnKTtcbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gb3duS2V5cyhlLCByKSB7IHZhciB0ID0gT2JqZWN0LmtleXMoZSk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBvID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTsgciAmJiAobyA9IG8uZmlsdGVyKGZ1bmN0aW9uIChyKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsIHIpLmVudW1lcmFibGU7IH0pKSwgdC5wdXNoLmFwcGx5KHQsIG8pOyB9IHJldHVybiB0OyB9XG4gICAgZnVuY3Rpb24gX29iamVjdFNwcmVhZChlKSB7IGZvciAodmFyIHIgPSAxOyByIDwgYXJndW1lbnRzLmxlbmd0aDsgcisrKSB7IHZhciB0ID0gbnVsbCAhPSBhcmd1bWVudHNbcl0gPyBhcmd1bWVudHNbcl0gOiB7fTsgciAlIDIgPyBvd25LZXlzKE9iamVjdCh0KSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAocikgeyBfZGVmaW5lUHJvcGVydHkoZSwgciwgdFtyXSk7IH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyh0KSkgOiBvd25LZXlzKE9iamVjdCh0KSkuZm9yRWFjaChmdW5jdGlvbiAocikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgciwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LCByKSk7IH0pOyB9IHJldHVybiBlOyB9XG4gICAgdmFyIE9OR09JTkdfUkVRVUVTVFMgPSBuZXcgV2Vha01hcCgpO1xuICAgIHZhciBjcmVhdGVPckdldE9uZ29pbmdSZXF1ZXN0cyA9IGZ1bmN0aW9uIGNyZWF0ZU9yR2V0T25nb2luZ1JlcXVlc3RzKHNlbmRlcikge1xuICAgICAgaWYgKE9OR09JTkdfUkVRVUVTVFMuaGFzKHNlbmRlcikpIHtcbiAgICAgICAgLy8gQHRvZG8gVHlwZVNjcmlwdCBuZWVkcyB0byBiZSBjb252aW5jZWQgdGhhdCBoYXMoKSB3b3JrcyBhcyBleHBlY3RlZC5cbiAgICAgICAgcmV0dXJuIE9OR09JTkdfUkVRVUVTVFMuZ2V0KHNlbmRlcik7XG4gICAgICB9XG4gICAgICB2YXIgb25nb2luZ1JlcXVlc3RzID0gbmV3IE1hcCgpO1xuICAgICAgT05HT0lOR19SRVFVRVNUUy5zZXQoc2VuZGVyLCBvbmdvaW5nUmVxdWVzdHMpO1xuICAgICAgcmV0dXJuIG9uZ29pbmdSZXF1ZXN0cztcbiAgICB9O1xuICAgIHZhciBjcmVhdGVCcm9rZXIgPSBmdW5jdGlvbiBjcmVhdGVCcm9rZXIoYnJva2VySW1wbGVtZW50YXRpb24pIHtcbiAgICAgIHZhciBmdWxsQnJva2VySW1wbGVtZW50YXRpb24gPSBleHRlbmRCcm9rZXJJbXBsZW1lbnRhdGlvbihicm9rZXJJbXBsZW1lbnRhdGlvbik7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gKHNlbmRlcikge1xuICAgICAgICB2YXIgb25nb2luZ1JlcXVlc3RzID0gY3JlYXRlT3JHZXRPbmdvaW5nUmVxdWVzdHMoc2VuZGVyKTtcbiAgICAgICAgc2VuZGVyLmFkZEV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCBmdW5jdGlvbiAoX3JlZikge1xuICAgICAgICAgIHZhciBtZXNzYWdlID0gX3JlZi5kYXRhO1xuICAgICAgICAgIHZhciBpZCA9IG1lc3NhZ2UuaWQ7XG4gICAgICAgICAgaWYgKGlkICE9PSBudWxsICYmIG9uZ29pbmdSZXF1ZXN0cy5oYXMoaWQpKSB7XG4gICAgICAgICAgICB2YXIgX29uZ29pbmdSZXF1ZXN0cyRnZXQgPSBvbmdvaW5nUmVxdWVzdHMuZ2V0KGlkKSxcbiAgICAgICAgICAgICAgcmVqZWN0ID0gX29uZ29pbmdSZXF1ZXN0cyRnZXQucmVqZWN0LFxuICAgICAgICAgICAgICByZXNvbHZlID0gX29uZ29pbmdSZXF1ZXN0cyRnZXQucmVzb2x2ZTtcbiAgICAgICAgICAgIG9uZ29pbmdSZXF1ZXN0c1tcImRlbGV0ZVwiXShpZCk7XG4gICAgICAgICAgICBpZiAobWVzc2FnZS5lcnJvciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgIHJlc29sdmUobWVzc2FnZS5yZXN1bHQpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihtZXNzYWdlLmVycm9yLm1lc3NhZ2UpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoaXNNZXNzYWdlUG9ydChzZW5kZXIpKSB7XG4gICAgICAgICAgc2VuZGVyLnN0YXJ0KCk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGNhbGwgPSBmdW5jdGlvbiBjYWxsKG1ldGhvZCkge1xuICAgICAgICAgIHZhciBwYXJhbXMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IG51bGw7XG4gICAgICAgICAgdmFyIHRyYW5zZmVyYWJsZXMgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IFtdO1xuICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgICAgICB2YXIgaWQgPSBmYXN0VW5pcXVlTnVtYmVycy5nZW5lcmF0ZVVuaXF1ZU51bWJlcihvbmdvaW5nUmVxdWVzdHMpO1xuICAgICAgICAgICAgb25nb2luZ1JlcXVlc3RzLnNldChpZCwge1xuICAgICAgICAgICAgICByZWplY3Q6IHJlamVjdCxcbiAgICAgICAgICAgICAgcmVzb2x2ZTogcmVzb2x2ZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAocGFyYW1zID09PSBudWxsKSB7XG4gICAgICAgICAgICAgIHNlbmRlci5wb3N0TWVzc2FnZSh7XG4gICAgICAgICAgICAgICAgaWQ6IGlkLFxuICAgICAgICAgICAgICAgIG1ldGhvZDogbWV0aG9kXG4gICAgICAgICAgICAgIH0sIHRyYW5zZmVyYWJsZXMpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgc2VuZGVyLnBvc3RNZXNzYWdlKHtcbiAgICAgICAgICAgICAgICBpZDogaWQsXG4gICAgICAgICAgICAgICAgbWV0aG9kOiBtZXRob2QsXG4gICAgICAgICAgICAgICAgcGFyYW1zOiBwYXJhbXNcbiAgICAgICAgICAgICAgfSwgdHJhbnNmZXJhYmxlcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIHZhciBub3RpZnkgPSBmdW5jdGlvbiBub3RpZnkobWV0aG9kLCBwYXJhbXMpIHtcbiAgICAgICAgICB2YXIgdHJhbnNmZXJhYmxlcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogW107XG4gICAgICAgICAgc2VuZGVyLnBvc3RNZXNzYWdlKHtcbiAgICAgICAgICAgIGlkOiBudWxsLFxuICAgICAgICAgICAgbWV0aG9kOiBtZXRob2QsXG4gICAgICAgICAgICBwYXJhbXM6IHBhcmFtc1xuICAgICAgICAgIH0sIHRyYW5zZmVyYWJsZXMpO1xuICAgICAgICB9O1xuICAgICAgICB2YXIgZnVuY3Rpb25zID0ge307XG4gICAgICAgIGZvciAodmFyIF9pID0gMCwgX09iamVjdCRlbnRyaWVzID0gT2JqZWN0LmVudHJpZXMoZnVsbEJyb2tlckltcGxlbWVudGF0aW9uKTsgX2kgPCBfT2JqZWN0JGVudHJpZXMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgdmFyIF9PYmplY3QkZW50cmllcyRfaSA9IF9zbGljZWRUb0FycmF5KF9PYmplY3QkZW50cmllc1tfaV0sIDIpLFxuICAgICAgICAgICAga2V5ID0gX09iamVjdCRlbnRyaWVzJF9pWzBdLFxuICAgICAgICAgICAgaGFuZGxlciA9IF9PYmplY3QkZW50cmllcyRfaVsxXTtcbiAgICAgICAgICBmdW5jdGlvbnMgPSBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGZ1bmN0aW9ucyksIHt9LCBfZGVmaW5lUHJvcGVydHkoe30sIGtleSwgaGFuZGxlcih7XG4gICAgICAgICAgICBjYWxsOiBjYWxsLFxuICAgICAgICAgICAgbm90aWZ5OiBub3RpZnlcbiAgICAgICAgICB9KSkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCBmdW5jdGlvbnMpO1xuICAgICAgfTtcbiAgICB9O1xuXG4gICAgZXhwb3J0cy5jcmVhdGVCcm9rZXIgPSBjcmVhdGVCcm9rZXI7XG5cbn0pKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/broker-factory/build/es5/bundle.js\n");

/***/ })

};
;