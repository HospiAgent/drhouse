/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/subscribable-things";
exports.ids = ["vendor-chunks/subscribable-things"];
exports.modules = {

/***/ "(ssr)/./node_modules/subscribable-things/build/es5/bundle.js":
/*!**************************************************************!*\
  !*** ./node_modules/subscribable-things/build/es5/bundle.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("(function (global, factory) {\n     true ? factory(exports, __webpack_require__(/*! rxjs-interop */ \"(ssr)/./node_modules/rxjs-interop/dist/cjs/index.js\"), __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/defineProperty.js\")) :\n    0;\n})(this, (function (exports, rxjsInterop, _defineProperty) { 'use strict';\n\n    var createAnimationFrame = function createAnimationFrame(emitNotSupportedError, window, wrapSubscribeFunction) {\n      return function () {\n        return wrapSubscribeFunction(function (observer) {\n          if (window === null || window.cancelAnimationFrame === undefined || window.requestAnimationFrame === undefined) {\n            return emitNotSupportedError(observer);\n          }\n          var animationFrameHandle = window.requestAnimationFrame(function animationFrameCallback(timestamp) {\n            animationFrameHandle = window.requestAnimationFrame(animationFrameCallback);\n            observer.next(timestamp);\n          });\n          return function () {\n            return window.cancelAnimationFrame(animationFrameHandle);\n          };\n        });\n      };\n    };\n\n    var createAttribute = function createAttribute(mapSubscribableThing, mutations, prependSubscribableThing) {\n      return function (htmlElement, name) {\n        var getAttribute = function getAttribute() {\n          return htmlElement.getAttribute(name);\n        };\n        return prependSubscribableThing(mapSubscribableThing(mutations(htmlElement, {\n          attributeFilter: [name],\n          childList: false,\n          subtree: false\n        }), function () {\n          return getAttribute();\n        }), getAttribute());\n      };\n    };\n\n    var createGeolocation = function createGeolocation(emitNotSupportedError, window, wrapSubscribeFunction) {\n      return function (options) {\n        return wrapSubscribeFunction(function (observer) {\n          if (window === null || window.navigator === undefined || window.navigator.geolocation === undefined || window.navigator.geolocation.clearWatch === undefined || window.navigator.geolocation.watchPosition === undefined) {\n            return emitNotSupportedError(observer);\n          }\n          var watchId = window.navigator.geolocation.watchPosition(function (position) {\n            return observer.next(position);\n          }, function (err) {\n            return observer.error(err);\n          }, options);\n          return function () {\n            return window.navigator.geolocation.clearWatch(watchId);\n          };\n        });\n      };\n    };\n\n    var createIntersections = function createIntersections(emitNotSupportedError, window, wrapSubscribeFunction) {\n      return function (htmlElement, options) {\n        return wrapSubscribeFunction(function (observer) {\n          if (window === null || window.IntersectionObserver === undefined) {\n            return emitNotSupportedError(observer);\n          }\n          var intersectionObserverObserver = new window.IntersectionObserver(function (entries) {\n            return observer.next(entries);\n          }, options);\n          try {\n            intersectionObserverObserver.observe(htmlElement);\n          } catch (err) {\n            observer.error(err);\n          }\n          return function () {\n            return intersectionObserverObserver.disconnect();\n          };\n        });\n      };\n    };\n\n    function ownKeys$1(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\n    function _objectSpread$1(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys$1(Object(t), true).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$1(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n    var createMapSubscribableThing = function createMapSubscribableThing(wrapSubscribeFunction) {\n      return function (subscribableThing, map) {\n        return wrapSubscribeFunction(function (observer) {\n          return subscribableThing(_objectSpread$1(_objectSpread$1({}, observer), {}, {\n            next: function next(value) {\n              return observer.next(map(value));\n            }\n          }));\n        });\n      };\n    };\n\n    var createMediaDevices = function createMediaDevices(emitNotSupportedError, window, wrapSubscribeFunction) {\n      return function () {\n        return wrapSubscribeFunction(function (observer) {\n          if (window === null || window.navigator === undefined || window.navigator.mediaDevices === undefined || window.navigator.mediaDevices.enumerateDevices === undefined) {\n            return emitNotSupportedError(observer);\n          }\n          var isActive = true;\n          var enumerateDevices = function enumerateDevices() {\n            window.navigator.mediaDevices.enumerateDevices().then(function (mediaDevices) {\n              if (isActive) {\n                observer.next(mediaDevices);\n              }\n            }, function (err) {\n              if (isActive) {\n                unsubscribe();\n                observer.error(err);\n              }\n            });\n          };\n          var unsubscribe = function unsubscribe() {\n            isActive = false;\n            window.navigator.mediaDevices.removeEventListener('devicechange', enumerateDevices);\n          };\n          enumerateDevices();\n          window.navigator.mediaDevices.addEventListener('devicechange', enumerateDevices);\n          return unsubscribe;\n        });\n      };\n    };\n\n    var createMediaQueryMatch = function createMediaQueryMatch(emitNotSupportedError, window, wrapSubscribeFunction) {\n      return function (mediaQueryString) {\n        return wrapSubscribeFunction(function (observer) {\n          if (window === null || window.matchMedia === undefined) {\n            return emitNotSupportedError(observer);\n          }\n          var mediaQueryList = window.matchMedia(mediaQueryString);\n          observer.next(mediaQueryList.matches);\n          mediaQueryList.onchange = function () {\n            return observer.next(mediaQueryList.matches);\n          };\n          return function () {\n            mediaQueryList.onchange = null;\n          };\n        });\n      };\n    };\n\n    var createMetrics = function createMetrics(emitNotSupportedError, window, wrapSubscribeFunction) {\n      return function (options) {\n        return wrapSubscribeFunction(function (observer) {\n          if (window === null || window.PerformanceObserver === undefined) {\n            return emitNotSupportedError(observer);\n          }\n          var performanceObserver = new window.PerformanceObserver(function (entryList) {\n            return observer.next(entryList.getEntries());\n          });\n          try {\n            performanceObserver.observe(options);\n          } catch (err) {\n            observer.error(err);\n          }\n          return function () {\n            return performanceObserver.disconnect();\n          };\n        });\n      };\n    };\n\n    var createMidiInputs = function createMidiInputs(wrapSubscribeFunction) {\n      return function (midiAccess) {\n        return wrapSubscribeFunction(function (observer) {\n          var midiInputs = Array.from(midiAccess.inputs.values());\n          var emitMidiInputs = function emitMidiInputs() {\n            var midiAccessInputs = midiAccess.inputs;\n            if (midiInputs.length !== midiAccessInputs.size || midiInputs.some(function (_ref) {\n              var id = _ref.id;\n              return !midiAccessInputs.has(id);\n            })) {\n              midiInputs = Array.from(midiAccessInputs.values());\n              observer.next(midiInputs);\n            }\n          };\n          observer.next(midiInputs);\n          midiAccess.addEventListener('statechange', emitMidiInputs);\n          return function () {\n            return midiAccess.removeEventListener('statechange', emitMidiInputs);\n          };\n        });\n      };\n    };\n\n    var createMidiOutputs = function createMidiOutputs(wrapSubscribeFunction) {\n      return function (midiAccess) {\n        return wrapSubscribeFunction(function (observer) {\n          var midiOutputs = Array.from(midiAccess.outputs.values());\n          var emitMidiOutputs = function emitMidiOutputs() {\n            var midiAccessOutputs = midiAccess.outputs;\n            if (midiOutputs.length !== midiAccessOutputs.size || midiOutputs.some(function (_ref) {\n              var id = _ref.id;\n              return !midiAccessOutputs.has(id);\n            })) {\n              midiOutputs = Array.from(midiAccessOutputs.values());\n              observer.next(midiOutputs);\n            }\n          };\n          observer.next(midiOutputs);\n          midiAccess.addEventListener('statechange', emitMidiOutputs);\n          return function () {\n            return midiAccess.removeEventListener('statechange', emitMidiOutputs);\n          };\n        });\n      };\n    };\n\n    var createMutations = function createMutations(emitNotSupportedError, window, wrapSubscribeFunction) {\n      return function (htmlElement, options) {\n        return wrapSubscribeFunction(function (observer) {\n          if (window === null || window.MutationObserver === undefined) {\n            return emitNotSupportedError(observer);\n          }\n          var mutationObserver = new window.MutationObserver(function (records) {\n            return observer.next(records);\n          });\n          try {\n            mutationObserver.observe(htmlElement, options);\n          } catch (err) {\n            observer.error(err);\n          }\n          return function () {\n            return mutationObserver.disconnect();\n          };\n        });\n      };\n    };\n\n    var createOn = function createOn(wrapSubscribeFunction) {\n      return function (target, type, options) {\n        return wrapSubscribeFunction(function (observer) {\n          var listener = function listener(event) {\n            return observer.next(event);\n          };\n          target.addEventListener(type, listener, options);\n          return function () {\n            return target.removeEventListener(type, listener, options);\n          };\n        });\n      };\n    };\n\n    var createOnline = function createOnline(emitNotSupportedError, window, wrapSubscribeFunction) {\n      return function () {\n        return wrapSubscribeFunction(function (observer) {\n          if (window === null || window.navigator === undefined || window.navigator.onLine === undefined) {\n            return emitNotSupportedError(observer);\n          }\n          var emitFalse = function emitFalse() {\n            return observer.next(false);\n          };\n          var emitTrue = function emitTrue() {\n            return observer.next(true);\n          };\n          window.addEventListener('offline', emitFalse);\n          window.addEventListener('online', emitTrue);\n          observer.next(window.navigator.onLine);\n          return function () {\n            window.removeEventListener('offline', emitFalse);\n            window.removeEventListener('online', emitTrue);\n          };\n        });\n      };\n    };\n\n    var createPermissionState = function createPermissionState(emitNotSupportedError, window, wrapSubscribeFunction) {\n      return function (permissionDescriptor) {\n        return wrapSubscribeFunction(function (observer) {\n          if (window === null || window.navigator === undefined || window.navigator.permissions === undefined || window.navigator.permissions.query === undefined) {\n            return emitNotSupportedError(observer);\n          }\n          var isActive = true;\n          var unsubscribe = function unsubscribe() {\n            isActive = false;\n          };\n          window.navigator.permissions.query(permissionDescriptor).then(function (permissionStatus) {\n            if (isActive) {\n              observer.next(permissionStatus.state);\n            }\n            if (isActive) {\n              permissionStatus.onchange = function () {\n                return observer.next(permissionStatus.state);\n              };\n              unsubscribe = function unsubscribe() {\n                permissionStatus.onchange = null;\n              };\n            }\n          }, function (err) {\n            if (isActive) {\n              observer.error(err);\n            }\n          });\n          return function () {\n            return unsubscribe();\n          };\n        });\n      };\n    };\n\n    var createPrependSubscribableThing = function createPrependSubscribableThing(wrapSubscribeFunction) {\n      return function (subscribableThing, prependedValue) {\n        return wrapSubscribeFunction(function (observer) {\n          observer.next(prependedValue);\n          return subscribableThing(observer);\n        });\n      };\n    };\n\n    var createReports = function createReports(emitNotSupportedError, window, wrapSubscribeFunction) {\n      return function (options) {\n        return wrapSubscribeFunction(function (observer) {\n          if (window === null || window.ReportingObserver === undefined) {\n            return emitNotSupportedError(observer);\n          }\n          var reportingObserver = new window.ReportingObserver(function (reportList) {\n            return observer.next(reportList);\n          }, options);\n          reportingObserver.observe();\n          return function () {\n            return reportingObserver.disconnect();\n          };\n        });\n      };\n    };\n\n    var createResizes = function createResizes(emitNotSupportedError, window, wrapSubscribeFunction) {\n      return function (htmlElement, options) {\n        return wrapSubscribeFunction(function (observer) {\n          if (window === null || window.ResizeObserver === undefined) {\n            return emitNotSupportedError(observer);\n          }\n          var resizeObserver = new window.ResizeObserver(function (entries) {\n            return observer.next(entries);\n          });\n          try {\n            resizeObserver.observe(htmlElement, options);\n          } catch (err) {\n            observer.error(err);\n          }\n          return function () {\n            return resizeObserver.disconnect();\n          };\n        });\n      };\n    };\n\n    var createUnhandledRejection = function createUnhandledRejection(emitNotSupportedError, window, wrapSubscribeFunction) {\n      return function (coolingOffPeriod) {\n        return wrapSubscribeFunction(function (observer) {\n          if (window === null || window.clearInterval === undefined || window.setInterval === undefined) {\n            return emitNotSupportedError(observer);\n          }\n          var possiblyUnhandledRejections = new Map();\n          var intervalId = null;\n          var deletePossiblyUnhandledRejection = function deletePossiblyUnhandledRejection(_ref) {\n            var promise = _ref.promise;\n            return possiblyUnhandledRejections[\"delete\"](promise);\n          };\n          var emitUnhandledRejection = function emitUnhandledRejection() {\n            var latestTimestampToEmit = Date.now() - coolingOffPeriod;\n            possiblyUnhandledRejections.forEach(function (_ref2, promise) {\n              var reason = _ref2.reason,\n                timestamp = _ref2.timestamp;\n              if (timestamp > latestTimestampToEmit) {\n                return;\n              }\n              possiblyUnhandledRejections[\"delete\"](promise);\n              observer.next(reason);\n            });\n            if (intervalId !== null && possiblyUnhandledRejections.size === 0) {\n              window.clearInterval(intervalId);\n              intervalId = null;\n            }\n          };\n          var registerPossiblyUnhandledRejection = function registerPossiblyUnhandledRejection(event) {\n            event.preventDefault();\n            possiblyUnhandledRejections.set(event.promise, {\n              reason: event.reason,\n              timestamp: Date.now()\n            });\n            if (intervalId === null) {\n              intervalId = window.setInterval(emitUnhandledRejection, coolingOffPeriod / 2);\n            }\n          };\n          window.addEventListener('rejectionhandled', deletePossiblyUnhandledRejection);\n          window.addEventListener('unhandledrejection', registerPossiblyUnhandledRejection);\n          return function () {\n            if (intervalId !== null) {\n              window.clearInterval(intervalId);\n            }\n            window.removeEventListener('rejectionhandled', deletePossiblyUnhandledRejection);\n            window.removeEventListener('unhandledrejection', registerPossiblyUnhandledRejection);\n          };\n        });\n      };\n    };\n\n    function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\n    function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), true).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n    var createVideoFrame = function createVideoFrame(emitNotSupportedError, wrapSubscribeFunction) {\n      return function (videoElement) {\n        return wrapSubscribeFunction(function (observer) {\n          if (videoElement.cancelVideoFrameCallback === undefined || videoElement.requestVideoFrameCallback === undefined) {\n            return emitNotSupportedError(observer);\n          }\n          var videoFrameHandle = videoElement.requestVideoFrameCallback(function videoFrameCallback(now, metadata) {\n            videoFrameHandle = videoElement.requestVideoFrameCallback(videoFrameCallback);\n            observer.next(_objectSpread(_objectSpread({}, metadata), {}, {\n              now: now\n            }));\n          });\n          return function () {\n            return videoElement.cancelVideoFrameCallback(videoFrameHandle);\n          };\n        });\n      };\n    };\n\n    var createWakeLock = function createWakeLock(emitNotSupportedError, window, wrapSubscribeFunction) {\n      return function (type) {\n        return wrapSubscribeFunction(function (observer) {\n          if (window === null || window.navigator === undefined || window.navigator.wakeLock === undefined) {\n            return emitNotSupportedError(observer);\n          }\n          var releaseWakeLock = function releaseWakeLock(wakeLockSentinel) {\n            return wakeLockSentinel.release()[\"catch\"](function () {\n              // Ignore errors.\n            });\n          };\n          var removeReleaseEventListener = function removeReleaseEventListener(wakeLockSentinel) {\n            wakeLockSentinel.onrelease = null;\n          };\n          var isActive = true;\n          var unsubscribeWhileRequesting = function unsubscribeWhileRequesting() {\n            isActive = false;\n          };\n          var unsubscribe = unsubscribeWhileRequesting;\n          var _requestWakeLock = function requestWakeLock() {\n            return window.navigator.wakeLock.request(type).then(function (wakeLockSentinel) {\n              if (isActive) {\n                observer.next(true);\n              }\n              if (isActive) {\n                wakeLockSentinel.onrelease = function () {\n                  observer.next(false);\n                  unsubscribe = unsubscribeWhileRequesting;\n                  removeReleaseEventListener(wakeLockSentinel);\n                  _requestWakeLock();\n                };\n                unsubscribe = function unsubscribe() {\n                  removeReleaseEventListener(wakeLockSentinel);\n                  releaseWakeLock(wakeLockSentinel);\n                };\n              } else {\n                releaseWakeLock(wakeLockSentinel);\n              }\n            }, function (err) {\n              if (isActive) {\n                observer.error(err);\n              }\n            });\n          };\n          _requestWakeLock();\n          return function () {\n            return unsubscribe();\n          };\n        });\n      };\n    };\n\n    // @todo TypeScript does not include type definitions for the Reporting API yet.\n    var createWindow = function createWindow() {\n      return typeof window === 'undefined' ? null : window;\n    };\n\n    var createWrapSubscribeFunction = function createWrapSubscribeFunction(patch, toObserver) {\n      var emptyFunction = function emptyFunction() {}; // tslint:disable-line:no-empty\n      var isNextFunction = function isNextFunction(args) {\n        return typeof args[0] === 'function';\n      };\n      return function (innerSubscribe) {\n        var _subscribe = function subscribe() {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          var unsubscribe = innerSubscribe(isNextFunction(args) ? toObserver({\n            next: args[0]\n          }) : toObserver.apply(void 0, args));\n          if (unsubscribe !== undefined) {\n            return unsubscribe;\n          }\n          return emptyFunction;\n        };\n        _subscribe[Symbol.observable] = function () {\n          return {\n            subscribe: function subscribe() {\n              return {\n                unsubscribe: _subscribe.apply(void 0, arguments)\n              };\n            }\n          };\n        };\n        return patch(_subscribe);\n      };\n    };\n\n    var emitNotSupportedError = function emitNotSupportedError(observer) {\n      observer.error(new Error('The required browser API seems to be not supported.'));\n      return function () {}; // tslint:disable-line:no-empty\n    };\n\n    var window$1 = createWindow();\n    var wrapSubscribeFunction = createWrapSubscribeFunction(rxjsInterop.patch, rxjsInterop.toObserver);\n    var animationFrame = createAnimationFrame(emitNotSupportedError, window$1, wrapSubscribeFunction);\n    var mutations = createMutations(emitNotSupportedError, window$1, wrapSubscribeFunction);\n    var mapSubscribableThing = createMapSubscribableThing(wrapSubscribeFunction);\n    var prependSubscribableThing = createPrependSubscribableThing(wrapSubscribeFunction);\n    var attribute = createAttribute(mapSubscribableThing, mutations, prependSubscribableThing);\n    var geolocation = createGeolocation(emitNotSupportedError, window$1, wrapSubscribeFunction);\n    var intersections = createIntersections(emitNotSupportedError, window$1, wrapSubscribeFunction);\n    var mediaDevices = createMediaDevices(emitNotSupportedError, window$1, wrapSubscribeFunction);\n    var mediaQueryMatch = createMediaQueryMatch(emitNotSupportedError, window$1, wrapSubscribeFunction);\n    var metrics = createMetrics(emitNotSupportedError, window$1, wrapSubscribeFunction);\n    var midiInputs = createMidiInputs(wrapSubscribeFunction);\n    var midiOutputs = createMidiOutputs(wrapSubscribeFunction);\n    var on = createOn(wrapSubscribeFunction);\n    var online = createOnline(emitNotSupportedError, window$1, wrapSubscribeFunction);\n    var permissionState = createPermissionState(emitNotSupportedError, window$1, wrapSubscribeFunction);\n    var reports = createReports(emitNotSupportedError, window$1, wrapSubscribeFunction);\n    var resizes = createResizes(emitNotSupportedError, window$1, wrapSubscribeFunction);\n    var unhandledRejection = createUnhandledRejection(emitNotSupportedError, window$1, wrapSubscribeFunction);\n    var videoFrame = createVideoFrame(emitNotSupportedError, wrapSubscribeFunction);\n    var wakeLock = createWakeLock(emitNotSupportedError, window$1, wrapSubscribeFunction);\n\n    exports.animationFrame = animationFrame;\n    exports.attribute = attribute;\n    exports.geolocation = geolocation;\n    exports.intersections = intersections;\n    exports.mediaDevices = mediaDevices;\n    exports.mediaQueryMatch = mediaQueryMatch;\n    exports.metrics = metrics;\n    exports.midiInputs = midiInputs;\n    exports.midiOutputs = midiOutputs;\n    exports.mutations = mutations;\n    exports.on = on;\n    exports.online = online;\n    exports.permissionState = permissionState;\n    exports.reports = reports;\n    exports.resizes = resizes;\n    exports.unhandledRejection = unhandledRejection;\n    exports.videoFrame = videoFrame;\n    exports.wakeLock = wakeLock;\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/subscribable-things/build/es5/bundle.js\n");

/***/ })

};
;